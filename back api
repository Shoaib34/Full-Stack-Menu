// Import required packages
const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');

// Create an Express application
const app = express();

// Define the port the server will listen on
const port = process.env.PORT || 3000;

mongoose.connect('mongodb://127.0.0.1:27017/food', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
})
  .then(() => {
    console.log('MongoDB connected successfully');
  })
  .catch((error) => {
    console.error('MongoDB connection error:', error);
  });

// Create a basic model and schema for the "food" collection in MongoDB
const menuSchema = new mongoose.Schema({
  item: String,
  description: String,
  price: Number,
});

// Create a new MongoDB client
//const client = new MongoClient(url);

const Menu = mongoose.model('menu', menuSchema);
//const Menu = mongoose.model.db('food').collection('menu');

// Enable CORS (Cross-Origin Resource Sharing) to allow requests from other domains
app.use(cors());

// Parse JSON data in incoming requests
app.use(express.json());

// Define your API routes (e.g., an endpoint to get a list of menu items)

app.get('/api/menu', (req, res) => {
  const hardcodedData = [
    { id: 1, item: 'Burger', description: 'A delicious burger', price: 10.99 }, { id: 2, item: 'Pcikles', description: 'A delicious pcikles', price: 11.99 }
    // Add more hardcoded data as needed
  ];
  res.json(hardcodedData);
  console.log(hardcodedData)
});



// Start the server and listen on the specified port
app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});
